// Specifies encryption mechanism (SHA256)
const SHA256 = require('crypto-js/sha256');

// Every Block in the BlockChain has an id (its index), the date of block creation (timestamp), the data it stores (record),
// the hash of the previous block (previous_hash), and its own hash (hash), which is generated by
// creating a SHA256 hash from the id, timestamp, and record fields (hasher)
class Block{
    // Record includes following data: item name, item code (QR code), item price, supply chain array
    constructor(_id, timestamp, record, previous_hash = ''){
        this._id = _id;
        this.timestamp = timestamp;
        this.record = record;
        this.previous_hash = previous_hash;
        this.hash = this.hasher();
    }

    // Generates a SHA256 hash from constructor parameters
    hasher(){
        this.record_string = this.convert_record();
        var hash_obj = SHA256(this._id + this.timestamp + this.record_string);
        var hash_str = hash_obj.toString();
        return(hash_str);
    }

    // Helper function to hasher(), turns the record structure into a string
    convert_record(){ return(JSON.stringify(this.record)); }
}

module.exports = Block;

